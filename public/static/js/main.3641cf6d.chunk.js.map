{"version":3,"sources":["hooks/useForm.jsx","types/types.js","helpers/fetch.js","helpers/prepareEvents.js","actions/eventAction.js","actions/auth.js","components/auth/LoginScreen.jsx","actions/uiAction.js","helpers/calendar-messages-es.js","components/ui/Navbar.jsx","components/calendar/CalendarEvent.jsx","components/calendar/CalendarModal.jsx","components/ui/AddNewFab.jsx","components/ui/DeleteEventFab.jsx","components/calendar/CalendarScreen.jsx","components/ui/Spinner.jsx","routers/PublicRoute.jsx","routers/PrivateRoute.jsx","routers/AppRouter.jsx","reducers/uiReducer.js","reducers/calendarReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.jsx","index.js"],"names":["useForm","initialState","useState","values","setValues","handleInputChange","target","name","value","reset","newFormState","types","uiOpenModal","uiCloseModal","eventSetActive","eventLogout","eventStartAddNew","eventAddNew","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","authCheckingFinish","authLogin","authStartRegister","authLogout","baseUrl","process","fetchWithoutToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","prepareEvents","events","map","event","start","moment","toDate","end","type","payload","checkingFinish","login","user","startLogout","dispatch","clear","logout","LoginScreen","useDispatch","loginEmail","loginPassword","formLoginValues","handleLoginInputChange","registerName","registerEmail","registerPassword","passwordConfirmation","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","response","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","onChange","placeholder","autoComplete","error_msg","errors","Object","calendarMessages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","Navbar","useSelector","state","auth","onClick","icon","faSignOutAlt","CalendarEvent","title","customStyles","content","top","left","right","bottom","marginRight","transform","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","modalOpen","ui","activeEvent","calendar","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","notesValid","setNotesValid","formValues","setFormValues","useEffect","closeModal","Modal","setAppElement","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","faTimes","momentStart","momentEnd","isSameOrAfter","trim","length","id","position","showConfirmButton","timer","console","log","eventStartUpdate","getState","_id","minDate","rows","faSave","AddNewFab","faPlus","DeleteEventFab","faTrash","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","messages","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onSelectEvent","onDoubleClickEvent","onView","onSelectSlot","selectable","view","components","Spinner","message","setMessage","height","role","PublicRoute","isAuthenticated","Component","component","rest","props","to","PrivateRoute","AppRouter","checking","exact","path","uiReducer","action","calendarReducer","filter","authReducer","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3641cf6d.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nconst useForm = (initialState = {}) => {\n  const [values, setValues] = useState(initialState);\n\n  const handleInputChange = ({ target }) => {\n    setValues({\n      ...values,\n      [ target.name ]: target.value\n    });\n  };\n\n  const reset = ( newFormState = initialState ) => {\n    setValues( newFormState );\n  };\n\n  return [ values, handleInputChange, reset ];\n}\n\nexport default useForm;","const types = {\n\n  uiOpenModal:  \"[ui] Modal opened\",\n  uiCloseModal: \"[ui] modal closed\",\n\n  eventSetActive:        \"[event] Active event Setted\",\n  eventLogout:           \"[event] Logged Out\",\n\n  eventStartAddNew:      \"[event] Start add new\",\n  eventAddNew:           \"[event] Event Added\",\n  eventClearActiveEvent: \"[event] Event cleared\",\n  eventUpdated:          \"[event] Event updated\",\n  eventDeleted:          \"[event] Event deleted\",\n  eventLoaded:           \"[event] Events loaded\",\n\n  authCheckingFinish: \"[auth] Finish checking login state\",\n  authLogin: \"[auth] Start login\",\n  authStartRegister: \"[auth] Start Register\",\n  authLogout: \"[auth] Logout\",\n\n};\n\nexport default types;","const baseUrl = process.env.REACT_APP_API_URL;\n\n/**\n * Fetch endpoint without token\n *\n * @param {string} endpoint Example: auth, event\n * @param {Object} data Payload: { email, password }\n * @param {string?} method GET, POST, PUT, PATCH, DELETE\n * @returns {Promise<Response>}\n */\nconst fetchWithoutToken = ( endpoint, data, method = \"GET\") => {\n\n  // Example: localhost:3000/api/login\n  const url = `${ baseUrl }/${ endpoint }`;\n\n  if ( method === \"GET\" ) {\n\n    return fetch( url );\n\n  } else {\n\n    return fetch( url, {\n      method: method,\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify( data )\n    });\n\n  }\n};\n\n/**\n * Fetch endpoint without token\n *\n * @param {String} endpoint Example: auth, event\n * @param {Object} data Payload to be sended as object.\n * @param {String?} method GET, POST, PUT, PATCH, DELETE\n * @returns {Promise<Response>}\n */\n const fetchWithToken = ( endpoint, data, method = \"GET\") => {\n\n  // Example: localhost:3000/api/login\n  const url = `${ baseUrl }/${ endpoint }`;\n\n  // Obtener el token del localstorage\n  const token = localStorage.getItem(\"token\") || \"\";\n\n  if ( method === \"GET\" ) {\n\n    return fetch( url, {\n      method,\n      headers: {\n        \"x-token\": token\n      }\n    });\n\n  } else {\n\n    return fetch( url, {\n      method: method,\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"x-token\": token,\n      },\n      body: JSON.stringify( data )\n    });\n\n  }\n};\n\nexport {\n  fetchWithoutToken,\n  fetchWithToken,\n};\n","import moment from \"moment\";\n\n/**\n * Convert string dates with moment\n *\n * @param {Array} events Receive events array\n * @returns {Object} Returns events object\n */\nconst prepareEvents = ( events = [] ) => {\n\n  return events.map(\n    ( event ) => ({\n      ...event,\n      start: moment( event.start ).toDate(),\n      end: moment( event.end ).toDate(),\n    })\n  );\n}\n\nexport default prepareEvents;","import { fetchWithToken } from \"../helpers/fetch\";\nimport types from \"../types/types\";\nimport prepareEvents from '../helpers/prepareEvents';\nimport Swal from 'sweetalert2';\n\nexport const eventStartAddNew = ( event ) => {\n  return async ( dispatch, getState ) => {\n    const { uid, name } = getState().auth;\n\n    try {\n\n      const response = await fetchWithToken( \"events\", event, \"POST\" );\n      const body = await response.json();\n\n      if( body.ok ) {\n        event.id = body.event.id;\n\n        event.user = {\n          _id: uid,\n          name: name,\n        };\n\n        dispatch( eventAddNew( event ) );\n\n        Swal.fire({\n          position: 'center',\n          icon: 'success',\n          title: 'El evento ha sido creado',\n          showConfirmButton: false,\n          timer: 1500\n        });\n      }\n\n    } catch(error) {\n\n      console.log(error);\n\n    }\n  };\n};\n\nconst eventAddNew = ( event ) => ({\n  type: types.eventAddNew,\n  payload: event\n});\n\nexport const eventSetActive = ( event ) => ({\n  type: types.eventSetActive,\n  payload: event\n});\n\nexport const eventClearActiveEvent = () => ({\n  type: types.eventClearActiveEvent\n});\n\nexport const eventStartUpdate = ( event ) => {\n\n  return async ( dispatch ) => {\n\n    try {\n\n      const response = await fetchWithToken( `events/${event.id}`, event, \"PATCH\" );\n      const body = await response.json();\n\n      if ( body.ok ) {\n        dispatch( eventUpdated( event ) );\n\n        Swal.fire({\n          position: 'center',\n          icon: 'success',\n          title: 'El evento ha sido actualizado',\n          showConfirmButton: false,\n          timer: 1500\n        });\n\n      } else {\n        Swal.fire(\"Error\", body.msg, \"error\");\n      }\n\n    } catch (error) {\n      console.log( error );\n    }\n\n  };\n};\n\nconst eventUpdated = ( event ) => ({\n  type: types.eventUpdated,\n  payload: event\n});\n\nexport const eventStartDelete = () => {\n  return async ( dispatch, getState ) => {\n\n    const { id } = getState().calendar.activeEvent;\n\n    try {\n      const response = await fetchWithToken( `events/${id}`, {}, \"DELETE\" );\n      const body = await response.json();\n\n      if ( body.ok ) {\n\n        // Se llama el dispatch\n        dispatch( eventDeleted() );\n\n        Swal.fire({\n          position: 'center',\n          icon: 'success',\n          title: 'El evento ha sido eliminado',\n          showConfirmButton: false,\n          timer: 1500\n        });\n\n      } else {\n        Swal.fire(\"Error\", body.msg, \"error\");\n      }\n\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\n\nconst eventDeleted = () => ({ type: types.eventDeleted });\n\n\nexport const eventStartLoading = () => {\n  return async ( dispatch ) => {\n\n    try {\n\n      const response = await fetchWithToken( \"events\" );\n      const body = await response.json();\n\n      const events = prepareEvents( body.events );\n\n      if( body.ok ) {\n\n        // Disparamos la acción para enviar los eventos al state del redux\n        dispatch( eventLoaded( events ) );\n\n      }\n\n    } catch (error) {\n      console.log( error );\n    }\n\n    // dispatch(eventLoaded( events ));\n\n  }\n};\n\nconst eventLoaded = ( events ) => ({\n  type: types.eventLoaded,\n  payload: events,\n});\n\nexport const eventLogout = () => ({ type: types.eventLogout });","import Swal from 'sweetalert2';\n\nimport types from '../types/types';\nimport { fetchWithoutToken, fetchWithToken } from \"../helpers/fetch\";\nimport { eventLogout } from './eventAction';\n\n\nexport const startLogin = ( email, password ) => {\n  return async ( dispatch ) => {\n    const response = await fetchWithoutToken( \"auth\", { email, password }, \"POST\" );\n    const body = await response.json();\n\n    if ( body.ok ) {\n      // Se guarda el token en el storage\n      localStorage.setItem('token', body.token);\n\n      // Para saber cuando va a expirar el token\n      localStorage.setItem( 'token-init-date', new Date().getTime() );\n\n      // Dispara la acción del login\n      dispatch(\n        login({\n          uid: body.uid,\n          name: body.name\n        })\n      );\n    } else {\n      // En caso de que body.ok sea null,\n      // lanza un mensaje de error\n      Swal.fire(\"Error\", body.msg, \"error\");\n    }\n\n  };\n};\n\nexport const startRegister = ( name, email, password ) => {\n  return async ( dispatch ) => {\n    const response = await fetchWithoutToken( \"auth/new\", { name, email, password }, \"POST\" );\n    const body = await response.json();\n\n    if( body.ok ) {\n      // Se guarda el token en el storage\n      localStorage.setItem('token', body.token);\n\n      // Para saber cuando va a expirar el token\n      localStorage.setItem( 'token-init-date', new Date().getTime() );\n\n      // Dispara la acción del login\n      dispatch(\n        login({\n          uid: body.uid,\n          name: body.name\n        })\n      );\n    } else {\n      // En caso de que body.ok sea null,\n      // lanza un mensaje de error\n      const error_msg = body.errors\n        ? Object.values( body.errors )[0].msg\n        : body.msg\n\n      Swal.fire( 'Error', error_msg, 'error' );\n    }\n  }\n};\n\nexport const startChecking = () => {\n  return async ( dispatch ) => {\n    const isCurrentToken = !!(localStorage.getItem(\"token\") || \"\");\n\n    if (!isCurrentToken) {\n      dispatch(checkingFinish());\n      return;\n    }\n\n    const response = await fetchWithToken( \"auth/renew\" );\n    const body = await response.json();\n\n    if ( body.ok ) {\n      // Se guarda el token en el storage\n      localStorage.setItem('token', body.token);\n\n      // Para saber cuando va a expirar el token\n      localStorage.setItem( 'token-init-date', new Date().getTime() );\n\n      // Dispara la acción del login\n      dispatch(\n        login({\n          uid: body.uid,\n          name: body.name\n        })\n      );\n    } else {\n      dispatch( checkingFinish() );\n    }\n  };\n};\n\nconst checkingFinish = () => ({ type: types.authCheckingFinish });\n\nconst login = ( user ) => ({\n  type: types.authLogin,\n  payload: user\n});\n\nexport const startLogout = () => {\n  return ( dispatch ) => {\n\n    // Borrar el localStorage\n    localStorage.clear();\n\n    // Al salir de la sesión\n    // Limpiamos el estado inicial\n    dispatch( eventLogout() );\n\n\n    // Lamamos el logout de la app\n    dispatch( logout() );\n\n  };\n};\n\nconst logout = () => ({ type: types.authLogout });","import \"../../styles/main.scss\";\nimport useForm from '../../hooks/useForm';\nimport { useDispatch } from 'react-redux';\nimport { startLogin, startRegister } from '../../actions/auth';\nimport Swal from 'sweetalert2';\n\nconst LoginScreen = () => {\n\n  const dispatch = useDispatch();\n\n  const [ formLoginValues, handleLoginInputChange ] = useForm({\n    loginEmail:    \"\",\n    loginPassword: \"\",\n  });\n\n  const { loginEmail, loginPassword } = formLoginValues;\n\n  const [ formRegisterValues, handleRegisterInputChange ] = useForm({\n    registerName:          \"\",\n    registerEmail:         \"\",\n    registerPassword:      \"\",\n    passwordConfirmation:  \"\",\n  });\n\n  const { registerName, registerEmail, registerPassword, passwordConfirmation } = formRegisterValues;\n\n  // Login de usuario\n  const handleLogin = (event) => {\n    event.preventDefault();\n\n    dispatch( startLogin( loginEmail, loginPassword ) );\n  };\n\n  // Registro de usuario\n  const handleRegister = (event) => {\n    event.preventDefault();\n\n    if( registerPassword !== passwordConfirmation ) {\n      return Swal.fire(\"Error\", \"Las contraseñas deben coincidir\", \"error\");\n    }\n\n    dispatch( startRegister( registerName, registerEmail, registerPassword ) );\n  };\n\n  return (\n    <div className=\"container login-container\">\n      <div className=\"row\">\n        <div className=\"col-md-6 login-form-1 mb-5\">\n          <h3>Login</h3>\n\n          <form onSubmit={ handleLogin }>\n            <div className=\"form-group\">\n              <input\n                name=\"loginEmail\"\n                value={ loginEmail }\n                onChange={ handleLoginInputChange }\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Correo\"\n                autoComplete=\"off\"\n              />\n            </div>\n            <div className=\"form-group mb-4\">\n              <input\n                name=\"loginPassword\"\n                value={ loginPassword }\n                onChange={ handleLoginInputChange }\n                type=\"password\"\n                className=\"form-control\"\n                autoComplete=\"off\"\n              />\n            </div>\n            <div className=\"form-group text-center\">\n              <input type=\"submit\" className=\"btnSubmit\" value=\"Login\" />\n            </div>\n          </form>\n\n        </div>\n\n        <div className=\"col-md-6 login-form-2 mb-5\">\n          <h3>Register</h3>\n\n          <form onSubmit={ handleRegister }>\n            <div className=\"form-group\">\n              <input\n                name=\"registerName\"\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Name\"\n                autoComplete=\"off\"\n                onChange={ handleRegisterInputChange }\n                value={ registerName }\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                name=\"registerEmail\"\n                type=\"email\"\n                className=\"form-control\"\n                placeholder=\"Email\"\n                autoComplete=\"off\"\n                onChange={ handleRegisterInputChange }\n                value={ registerEmail }\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                name=\"registerPassword\"\n                type=\"password\"\n                className=\"form-control\"\n                placeholder=\"Password\"\n                autoComplete=\"off\"\n                onChange={ handleRegisterInputChange }\n                value={ registerPassword }\n              />\n            </div>\n\n            <div className=\"form-group mb-4\">\n              <input\n                name=\"passwordConfirmation\"\n                type=\"password\"\n                className=\"form-control\"\n                placeholder=\"Password Confirmation\"\n                autoComplete=\"off\"\n                onChange={ handleRegisterInputChange }\n                value={ passwordConfirmation }\n              />\n            </div>\n\n            <div className=\"form-group text-center\">\n              <input type=\"submit\" className=\"btnSubmit\" value=\"Create Account\" />\n            </div>\n          </form>\n\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginScreen;\n","import types from '../types/types';\n\nexport const uiOpenModal = () => ({ type: types.uiOpenModal });\n\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });","const calendarMessages = {\n  allDay: 'Todo el día',\n  previous: '<',\n  next: '>',\n  today: 'Hoy',\n  month: 'Mes',\n  week: 'Semana',\n  day: 'Día',\n  agenda: 'Agenda',\n  date: 'Fecha',\n  time: 'Hora',\n  event: 'Evento',\n  noEventsInRange: 'No hay eventos en este rango',\n  showMore: total => `+ Ver más (${total})`\n};\n\nexport default calendarMessages;","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { startLogout } from '../../actions/auth';\n\nconst Navbar = () => {\n  const { name } = useSelector(state => state.auth)\n  const dispatch = useDispatch();\n\n  const handleLogout = ( event ) => {\n    event.preventDefault();\n    dispatch( startLogout() );\n  };\n\n  return (\n    <div className=\"navbar navbar-dark bg-dark mb-4\">\n      <span className=\"navbar-brand\">{ name }</span>\n\n      <button\n        className=\"btn btn-outline-danger\"\n        onClick={ handleLogout }\n      >\n        <FontAwesomeIcon icon={ faSignOutAlt } />&nbsp;Salir\n      </button>\n    </div>\n  );\n}\n\nexport default Navbar;","const CalendarEvent = ({ event }) => {\n  const { title, user } = event;\n\n  return (\n    <div>\n      <strong>{ title }</strong>\n      <span>&nbsp;-&nbsp;{ user.name }</span>\n    </div>\n  );\n}\n\nexport default CalendarEvent;","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Modal from \"react-modal\";\nimport moment from 'moment';\nimport DateTimePicker from 'react-datetime-picker';\nimport Swal from \"sweetalert2\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSave, faTimes } from '@fortawesome/free-solid-svg-icons'\nimport { uiCloseModal } from '../../actions/uiAction';\nimport { eventStartAddNew, eventClearActiveEvent, eventStartUpdate } from '../../actions/eventAction';\n\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n  },\n};\n\nconst now = moment().minutes(0).seconds(0).add(1, \"hours\"); // 2:00:00\nconst nowPlus1 = now.clone().add(1, \"hours\"); // 3:00:00\n\nconst initEvent = {\n  title: \"\",\n  notes: \"\",\n  start: now.toDate(),\n  end: nowPlus1.toDate(),\n};\n\nconst CalendarModal = () => {\n  // Redux\n  const { modalOpen } = useSelector( state => state.ui );\n  const { activeEvent } = useSelector( state => state.calendar );\n  const dispatch = useDispatch();\n\n  // useState\n  const [ dateStart, setDateStart ]   = useState( now.toDate() );\n  const [ dateEnd, setDateEnd ]       = useState( nowPlus1.toDate() );\n  const [ titleValid, setTitleValid ] = useState( true );\n  const [ notesValid, setNotesValid ] = useState( true );\n  const [ formValues, setFormValues ] = useState( initEvent );\n\n  // Destructurar las propiedades de formValues\n  const { notes, title, start, end } = formValues;\n\n  useEffect(() => {\n\n    activeEvent\n      ? setFormValues( activeEvent )\n      : setFormValues( initEvent );\n\n  }, [activeEvent, setFormValues]);\n\n  const handleInputChange = ({ target }) => {\n\n    setFormValues({\n      // Colocar los valores iniciales\n      ...formValues,\n      // Computar de forma dinámica el key y value\n      [ target.name ]: target.value\n    });\n\n  };\n\n  const closeModal = () => {\n    dispatch( uiCloseModal() )\n    dispatch( eventClearActiveEvent() );\n    setFormValues( initEvent );\n  };\n\n  // Cambia la fecha de inicio con el useState\n  const handleStartDateChange = ( event ) => {\n    setDateStart( event );\n\n    // Cambia la fecha inicial del formulario\n    setFormValues({\n      ...formValues,\n      start: event,\n    });\n  };\n\n  // Cambia la fecha final con el useState\n  const handleEndDateChange = ( event ) => {\n    setDateEnd( event );\n\n    // Cambia la fecha final del formulario\n    setFormValues({\n      ...formValues,\n      end: event,\n    });\n  };\n\n  const handleFormSubmit = (event) => {\n    event.preventDefault();\n\n    const momentStart = moment( start );\n    const momentEnd = moment( end );\n\n    // Validación\n    // También existe: isBefore()\n    // También existe: isAfter()\n    if ( momentStart.isSameOrAfter( momentEnd ) ) {\n      return Swal.fire(\"Error\", \"La fecha final debe de ser mayor a la fecha de inicio\", \"error\");\n    }\n\n    if ( title.trim().length < 3 ) {\n      setTitleValid( false );\n      Swal.fire(\"Error\", \"El título debe ser mayor a 3 caracteres\", \"error\");\n      return;\n    }\n\n    if ( notes.trim().length < 8 ) {\n      setNotesValid( false );\n      Swal.fire(\"Error\", \"Las notas deben ser mayor a 8 caracteres\", \"error\");\n    }\n\n    setTitleValid( true );\n    setNotesValid( true );\n\n    if ( activeEvent ) {\n\n      // Actualiza la nota\n      dispatch( eventStartUpdate( formValues ) );\n\n    } else {\n\n      // Crea una nota nueva\n      dispatch( eventStartAddNew(formValues) );\n\n    }\n\n    closeModal();\n\n    // TODO: Realizar guardado en base de datos\n  };\n\n\n  // Make sure to bind modal to your appElement\n  // (https://reactcommunity.org/react-modal/accessibility/)\n  Modal.setAppElement(\"#root\");\n\n  return (\n    <Modal\n      // Si se pone true se mostrará el modal\n      isOpen={ modalOpen }\n\n      // onAfterOpen={ afterOpenModal }\n\n      // Si se da clic fuera del modal se llama esta función\n      onRequestClose={ closeModal }\n\n      // Estilos del Modal\n      style={ customStyles }\n\n      // Tiempo que dura cuando cerramos el modal en milisegundos\n      closeTimeoutMS={ 250 }\n\n      // La clase css del modal\n      className=\"modal\"\n\n      // La clase del overlay del modal\n      overlayClassName=\"modal-fondo\"\n    >\n      <button\n        className=\"btn btn-secondary btn-close\"\n        onClick={ closeModal }\n      >\n        <FontAwesomeIcon icon={ faTimes } />\n      </button>\n\n      <h1>{ activeEvent ? \"Editar evento\" : \"Nuevo evento\" }</h1>\n      <hr />\n      <form\n        className=\"container\"\n        onSubmit={ handleFormSubmit }\n      >\n        <div className=\"form-group\">\n          <label>Fecha y hora inicio</label>\n          <DateTimePicker\n            onChange={ handleStartDateChange }\n            value={ dateStart }\n            className=\"form-control\"\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label>Fecha y hora fin</label>\n          <DateTimePicker\n            onChange={ handleEndDateChange }\n            value={ dateEnd }\n            // Validación para que nunca sea menor a dateStart\n            minDate={ dateStart }\n            className=\"form-control\"\n          />\n        </div>\n\n        <hr />\n        <div className=\"form-group\">\n          <label>Titulo y notas</label>\n          <input\n            type=\"text\"\n            className={ `form-control ${ !titleValid && 'is-invalid' }` }\n            placeholder=\"Evento\"\n            name=\"title\"\n            autoComplete=\"off\"\n            value={ title }\n            onChange={ handleInputChange }\n          />\n          <small id=\"emailHelp\" className=\"form-text text-muted\">\n            Una descripción corta\n          </small>\n        </div>\n\n        <div className=\"form-group\">\n          <textarea\n            type=\"text\"\n            className={ `form-control ${ !notesValid && 'is-invalid' }` }\n            placeholder=\"Notas\"\n            rows=\"5\"\n            name=\"notes\"\n            onChange={ handleInputChange }\n            value={ notes }\n          ></textarea>\n          <small id=\"emailHelp\" className=\"form-text text-muted\">\n            Información adicional\n          </small>\n        </div>\n\n        <button type=\"submit\" className=\"btn btn-outline-primary btn-block\">\n          <FontAwesomeIcon icon={ faSave } />&nbsp;\n          <span>Guardar</span>\n        </button>\n      </form>\n    </Modal>\n  );\n};\n\nexport default CalendarModal;\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\nimport { useDispatch } from 'react-redux';\nimport { uiOpenModal } from '../../actions/uiAction';\n\nconst AddNewFab = () => {\n  const dispatch = useDispatch()\n\n  const openModal = () => {\n    dispatch( uiOpenModal() );\n  };\n\n  return (\n    <button\n      className=\"btn btn-primary fab\"\n      onClick={ openModal }\n    >\n      <FontAwesomeIcon icon={ faPlus } />\n    </button>\n  );\n}\n\nexport default AddNewFab;","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\nimport { useDispatch } from 'react-redux';\nimport { eventStartDelete } from '../../actions/eventAction';\n\n\nconst DeleteEventFab = () => {\n  const dispatch = useDispatch()\n\n  const deleteEvent = () => {\n    // Eliminar el evento del state de Redux\n    dispatch( eventStartDelete() );\n  }\n\n  return (\n    <button\n      className=\"btn btn-danger fab-danger\"\n      onClick={ deleteEvent }\n    >\n      <FontAwesomeIcon icon={ faTrash } />\n    </button>\n  );\n}\n\nexport default DeleteEventFab;","import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiOpenModal } from '../../actions/uiAction';\nimport { eventSetActive, eventClearActiveEvent, eventStartLoading } from '../../actions/eventAction';\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\nimport moment from \"moment\";\n\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport \"moment/locale/es\";\n\nimport calendarMessages from '../../helpers/calendar-messages-es';\nimport Navbar from \"../ui/Navbar\";\nimport CalendarEvent from './CalendarEvent';\nimport CalendarModal from './CalendarModal';\nimport AddNewFab from '../ui/AddNewFab';\nimport DeleteEventFab from '../ui/DeleteEventFab';\n\nmoment.locale(\"es\");\nconst localizer = momentLocalizer(moment)\n\nconst CalendarScreen = () => {\n  // Redux\n  const dispatch = useDispatch();\n\n  // Traer los eventos del State de Redux\n  const { events, activeEvent } = useSelector(state => state.calendar);\n\n  // Traer el UID del State de Redux\n  const { uid } = useSelector(state => state.auth);\n\n  // Obtener o cambiar state de lastView del localstorage para mantener, month, week, day\n  const [lastView, setLastView] = useState( localStorage.getItem(\"lastView\") || \"month\" );\n\n  useEffect(() => {\n    dispatch(eventStartLoading());\n  }, [ dispatch ]);\n\n  const onDoubleClick = ( event ) => {\n    dispatch( uiOpenModal() );\n  };\n\n  const onSelectEvent = ( event ) => {\n    dispatch( eventSetActive( event ) );\n  };\n\n  const onViewChange = ( event ) => {\n    // Actualizar el state del evento\n    setLastView( event );\n\n    // Guardar el evento del LocalStorage\n    localStorage.setItem( \"lastView\", event );\n  };\n\n  const onSelectSlot = () => {\n    dispatch( eventClearActiveEvent() );\n  }\n\n  const eventStyleGetter = ( event, start, end, isSelected ) => {\n\n    const style = {\n\n      // Cambiar el color de fondo del evento\n      // si el uid es igual al del usuario del evento\n      // en pocas palabras mostrar de color azul quien creó el evento\n      backgroundColor: ( uid === event.user._id ) ? \"#3667F7\" : \"#465660\",\n      // ******************************************************************\n\n      borderRadius: \"0px\",\n      opacity: 0.8,\n      display: \"block\",\n      color: \"#ffffff\",\n    };\n\n    return { style };\n  };\n\n  return (\n    <div className=\"calendar-screen\">\n      <Navbar />\n\n      <Calendar\n        localizer={ localizer }\n        events={ events }\n        startAccessor=\"start\"\n        endAccessor=\"end\"\n        messages={ calendarMessages }\n        eventPropGetter={ eventStyleGetter }\n        onSelectEvent={ onSelectEvent }\n        onDoubleClickEvent={ onDoubleClick }\n        onView={ onViewChange }\n        onSelectSlot={ onSelectSlot }\n        selectable={ true }\n        view={ lastView }\n        components={{\n          event: CalendarEvent\n        }}\n      />\n\n      <CalendarModal />\n\n      { activeEvent && <DeleteEventFab /> }\n\n      <AddNewFab />\n\n    </div>\n  );\n}\n\nexport default CalendarScreen;","import { useState } from 'react';\n\nconst Spinner = ({ msg }) => {\n  const [ message, setMessage ] = useState(\"Loading\");\n\n  msg && setMessage(msg);\n\n  return (\n    <div\n      className=\"bg-dark d-flex justify-content-center align-items-center\"\n      style={{ height: \"100vh\" }}\n    >\n      <div className=\"spinner-border text-success\" role=\"status\">\n        <span className=\"sr-only\">{ message } ...</span>\n      </div>\n    </div>\n  );\n}\n\nexport default Spinner;","import { Route, Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nconst PublicRoute = ({ isAuthenticated, component: Component, ...rest }) => {\n  return (\n    <Route\n      { ...rest }\n      component={ (props) => (\n        ( isAuthenticated )\n        ? ( <Redirect to=\"/\" /> )\n        : ( <Component { ...props } /> )\n      )}\n    />\n  );\n}\n\nexport default PublicRoute;\n\nPublicRoute.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired\n};","import { Redirect, Route } from 'react-router-dom';\nimport PropTypes from \"prop-types\";\n\nconst PrivateRoute = ({ isAuthenticated, component: Component, ...rest }) => {\n  return (\n    <Route\n      { ...rest }\n      component={( props ) =>\n        ( isAuthenticated )\n        ? ( <Component { ...props } />)\n        : ( <Redirect to=\"/login\" /> )\n      }\n    />\n  );\n}\n\nexport default PrivateRoute;\n\nPrivateRoute.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired\n};","import { useEffect } from \"react\";\nimport { Redirect, Switch } from \"react-router\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport LoginScreen from '../components/auth/LoginScreen';\nimport CalendarScreen from '../components/calendar/CalendarScreen';\nimport { startChecking } from '../actions/auth';\nimport Spinner from '../components/ui/Spinner';\nimport PublicRoute from './PublicRoute';\nimport PrivateRoute from './PrivateRoute';\n\nconst AppRouter = () => {\n  const dispatch = useDispatch();\n  const { checking, uid } = useSelector(state => state.auth);\n\n  // Usamos el efecto secundario para disparar\n  // la acción de startChecking que sirve si\n  // estamos autenticados o no\n  useEffect(() => {\n    dispatch( startChecking() );\n  }, [dispatch]);\n\n  // Llama el Spinner si checking es verdadero\n  if (checking) return ( <Spinner /> );\n\n  return (\n    <Router>\n      <div>\n        <Switch>\n\n          <PublicRoute\n            exact\n            path=\"/login\"\n            component={ LoginScreen }\n            isAuthenticated={ !!uid }\n          />\n\n          <PrivateRoute\n            exact\n            path=\"/\"\n            component={ CalendarScreen }\n            isAuthenticated={ !!uid }\n          />\n          <Redirect to=\"/\" />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default AppRouter;","import types from '../types/types';\n\nconst initialState = {\n  modalOpen: false,\n};\n\nconst uiReducer = ( state = initialState, action ) => {\n  switch (action.type) {\n    case types.uiOpenModal:\n      return {\n        ...state,\n        modalOpen: true\n      };\n\n    case types.uiCloseModal:\n      return {\n        ...state,\n        modalOpen: false\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default uiReducer;","import types from \"../types/types\";\n\n//  Objeto de referencia\n// {\n//   id: \"65a4s6a54f6asdf\",\n//   title: \"Junta con recursos humanos\",\n//   start: moment().add(2, \"days\").toDate(),\n//   end: moment().add(2, \"days\").add(2, \"hours\").toDate(),\n//   notes: \"Se definirán los perfiles para los proximos proyectos.\",\n//   user: {\n//     _id: \"258gd968&#tg6\",\n//     name: \"Daniel\",\n//   },\n// },\n\nconst initialState = {\n  events: [],\n  activeEvent: null,\n};\n\nconst calendarReducer = ( state = initialState, action ) => {\n  switch ( action.type ) {\n    case types.eventSetActive:\n      return {\n        ...state,\n        activeEvent: action.payload,\n      };\n\n    case types.eventAddNew:\n      return {\n        ...state,\n        events: [ ...state.events, action.payload ],\n      };\n\n    case types.eventClearActiveEvent:\n      return {\n        ...state,\n        activeEvent: null,\n      };\n\n    case types.eventUpdated:\n      return {\n        ...state,\n        events: state.events.map(\n          event => ( event.id === action.payload.id )\n          ? action.payload\n          : event\n        ),\n      };\n\n    case types.eventDeleted:\n      return {\n        ...state,\n        events: state.events.filter( event => event.id !== state.activeEvent.id ),\n        activeEvent: null\n      };\n\n    case types.eventLoaded:\n      return {\n        ...state,\n        events: [ ...action.payload ]\n      };\n\n    case types.eventLogout:\n      return {\n        ...initialState\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default calendarReducer;\n","import types from '../types/types';\n\nconst initialState = {\n  checking: true,\n  // uid: null,\n  // name: null\n};\n\nconst authReducer = ( state = initialState, action ) => {\n  switch ( action.type ) {\n    case types.authLogin:\n      return {\n        ...state,\n        ...action.payload,\n        checking: false,\n      };\n\n    case types.authCheckingFinish:\n      return {\n        ...state,\n        checking: false\n      };\n\n    case types.authLogout:\n      return {\n        checking: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","import { combineReducers } from \"redux\";\nimport uiReducer from './uiReducer';\nimport calendarReducer from './calendarReducer';\nimport authReducer from './authReducer';\n\nconst rootReducer = combineReducers({\n  ui: uiReducer,\n  calendar: calendarReducer,\n  auth: authReducer,\n});\n\nexport default rootReducer;","import { createStore, compose, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from '../reducers/rootReducer';\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers( applyMiddleware( thunk ) )\n);\n\nexport default store;","import { Provider } from \"react-redux\";\nimport AppRouter from \"./routers/AppRouter\";\n\nimport store from './store/store';\n\n\nconst CalendarApp = () => {\n  return (\n    <Provider store={ store }>\n      <AppRouter />\n    </Provider>\n  );\n};\n\nexport default CalendarApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport CalendarApp from './CalendarApp';\n\nReactDOM.render(\n  <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}